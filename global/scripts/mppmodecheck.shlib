# Functions for checking compliance with selected MPP mode for HCP Pipelines

# --- Import log.shlib 

if [[ "$(type -t log_Err_Abort)" != "function" ]]
then
    source "$HCPPIPEDIR/global/scripts/log.shlib" "$@"
fi


check_mpp_compliance()
{

    # --- Define variables

    local MPPMode="$1"
    local Compliance="$2"
    local ComplianceMsg="$3"
    local ComplianceWarn="$4"

    # --- Initial information

    if [ "${MPPMode}" = "LegacyStyleData" ]; then
      log_Msg "LegacyStyleData mode requested."
      log_Msg "NOTICE: You are using a mode that enables processing of acquisitions that do not"
      log_Msg "        conform to the HCP specification as described in Glasser et al. (2013)!"
      log_Msg "        Be aware that if the HCP requirements are not met, the level of data quality"
      log_Msg "        can not be guaranteed and the Glasser et al. (2013) paper should not be used"
      log_Msg "        in support of this workflow. A manuscript with comprehensive evaluation for"
      log_Msg "        the Extended MPP workflow is in active preparation and should be appropriately"
      log_Msg "        cited when published."
      log_Msg "        "
    fi

    # -- Final evaluation

    if [ "${MPPMode}" = "LegacyStyleData" ]; then
      if [ "${Compliance}" = "HCPStyleData" ]; then
        log_Warn "All conditions for the use of --mpp-mode=HCPStyleData are met. Consider using that mode (or equivalently, simply leave --mpp-mode empty) instead of --mpp-mode=LegacyStyleData."
      else
        log_Msg "The following LegacyStyleData settings were requested:${ComplianceMsg}"
      fi
      if [ ! -z "${ComplianceWarn}" ] ; then
        log_Warn "${ComplianceWarn}"
      fi
    else
      if [ "${Compliance}" = "LegacyStyleData" ]; then
        log_Err_Abort "--mpp-mode=HCPStyleData was requested, but the following settings are not compliant:${ComplianceMsg}. Fix these settings or consider requesting 'LegacyStyleData' mode instead."
      fi
    fi

}




