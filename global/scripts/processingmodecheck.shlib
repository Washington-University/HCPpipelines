#!/bin/echo This script should not run directly:

# Functions for checking compliance with selected processing mode for HCP Pipelines

# --- Import log.shlib 

if [[ "$(type -t log_Err_Abort)" != "function" ]]
then
    source "$HCPPIPEDIR/global/scripts/log.shlib" "$@"
fi


check_mode_compliance()
{

    # --- Define variables

    local ProcessingMode="$1"
    local Compliance="$2"
    local ComplianceMsg="$3"

    # --- Initial information

    if [ "${ProcessingMode}" = "LegacyStyleData" ]; then
        log_Msg "LegacyStyleData mode requested.
NOTICE: You are using a mode that enables processing of acquisitions that do not
        conform to the HCP specification as described in Glasser et al. (2013)!
        Be aware that if the HCP requirements are not met, the level of data
        quality can not be guaranteed and the Glasser et al. (2013) paper should
        not be used in support of this workflow.
"
    fi

    # -- Final evaluation

    if [ "${ProcessingMode}" = "LegacyStyleData" ]; then
        if [ "${Compliance}" = "HCPStyleData" ]; then
            log_Warn "All conditions for the use of --processing-mode=HCPStyleData are met.
    Consider using that mode (or equivalently, simply leave --processing-mode empty)
    instead of --processing-mode=LegacyStyleData."
        else
            msg="The following LegacyStyleData settings were requested:

   ${ComplianceMsg}
"
            if [[ -t 1 ]]
            then
                #if stdout is a terminal, give the user time to see this
                msg+="
script will continue in 10 seconds..."
                log_Msg "$msg"
                sleep 10
            else
                log_Msg "$msg"
            fi
        fi
    else
        if [ "${Compliance}" = "LegacyStyleData" ]; then
            log_Err_Abort "--processing-mode=HCPStyleData was requested, but the following settings are not compliant:

   ${ComplianceMsg}

Fix these settings or consider requesting 'LegacyStyleData' mode instead."
        fi
    fi

}




